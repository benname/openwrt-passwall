name: Build and Release OpenWrt IPK for x86

on:
  push:
    branches:
      - luci-smartdns-dev

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source code
      uses: actions/checkout@v2
      with:
        repository: benname/openwrt-passwall
        submodules: true
        ref: luci-smartdns-dev

    - name: Setup environment
      run: |
        sudo apt update -y
        sudo apt full-upgrade -y
        sudo apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
          bzip2 ccache clang cmake cpio curl device-tree-compiler ecj fastjar flex gawk gettext gcc-multilib \
          g++-multilib git gnutls-dev gperf haveged help2man intltool lib32gcc-s1 libc6-dev-i386 libelf-dev \
          libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5 \
          libncursesw5-dev libpython3-dev libreadline-dev libssl-dev libtool lld llvm lrzsz mkisofs msmtp \
          nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip python3-ply \
          python3-docutils python3-pyelftools qemu-utils re2c rsync scons squashfs-tools subversion swig \
          texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev

    - name: Clone ImmortalWRT
      run: |
        git clone https://github.com/immortalwrt/immortalwrt.git
        cd immortalwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Configure .config file
      run: |
        cd immortalwrt
        # Basic .config setup, adjust according to your needs
        echo "CONFIG_TARGET_x86=y" > .config
        echo "CONFIG_TARGET_x86_64=y" >> .config
        # Include additional configuration settings here using echo
        # For example, to enable luci-app-passwall, uncomment the next line
        # echo "CONFIG_PACKAGE_luci-app-passwall=y" >> .config
        make defconfig

    - name: Compile
      run: |
        cd immortalwrt
        make -j$(nproc)

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: release-${{ github.run_id }}
        release_name: Release ${{ github.run_number }} at ${{ github.event.push.timestamp }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./immortalwrt/bin/packages/x86_64/base/*.ipk
        asset_name: openwrt-passwall-ipk-${{ github.run_id }}.zip
        asset_content_type: application/zip
